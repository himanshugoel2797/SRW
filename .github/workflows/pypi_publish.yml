name: PyPI Publish

on: push

jobs:
  build-n-publish:
    name: ${{ matrix.host-os }} / Python ${{ matrix.python-version }} / OpenMP ${{ matrix.openmp }}
    runs-on: ${{ matrix.host-os }}
    strategy:
      matrix:
        host-os: ["ubuntu-latest", "macos-10.15", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]
        openmp: ["on", "off"]
      fail-fast: false

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Set OpenMP mode
        if: matrix.openmp == 'on'
        run: |
          export MODE="omp"
          echo "MODE=${MODE}" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: testenv
          allow-softlinks: true
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: flexible
          channels: conda-forge
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          show-channel-urls: true
          use-only-tar-bz2: false

      - name: Set up Visual Studio shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install build requirements with conda
        run: |
          set -vxeuo pipefail
          conda install -y cmake

      - name: Install OpenMP for macOS with conda
        if: runner.os == 'macOS' && matrix.openmp == 'on'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge llvm-openmp

      - name: Install mpi4py for Unix systems with conda
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge mpi4py openmpi

      - name: Build sdist and wheel and install *.whl
        run: |
          set -vxeuo pipefail
          cd env/python
          python -VV
          python setup.py sdist bdist_wheel
          ls -la dist/*
          pip install -v dist/*.whl

      - name: Publish wheels to GitHub artifacts
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: env/python/dist/*.whl

  publish-to-pypi:
    name: Publish to PyPI
    needs: build-n-publish
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v2

      - name: Download wheels from GitHub artifacts
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: env/python/dist

      - name: Publish wheels to PyPI Test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          packages_dir: ./env/python/dist/